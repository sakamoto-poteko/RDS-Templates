{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located."
            },
            "defaultValue": "https://raw.githubusercontent.com/Azure/RDS-Templates/master/wvd-templates/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation when they're located in a storage account with private access."
            },
            "defaultValue": ""
        },
        "rdshImageSource": {
            "type": "string",
            "metadata": {
                "description": "Select the image source for the session host vms. VMs from a Gallery image will be created with Managed Disks."
            },
            "defaultValue": "CustomImage",
            "allowedValues": [
                "CustomImage"
            ]
        },
        "rdshCustomImageSourceName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "(Required when rdshImageSource = CustomImage) Name of the managed disk."
            }
        },
        "rdshCustomImageSourceResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "(Required when rdshImageSource = CustomImage) Resource group name for the managed disk, if you choose to provide one."
            }
        },
        "rdshNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "This prefix will be used in combination with the VM number to create the VM name. If using 'rdsh' as the prefix, VMs would be named 'rdsh-0', 'rdsh-1', etc. You should use a unique prefix to reduce name collisions in Active Directory."
            },
            "defaultValue": "[take(toLower(resourceGroup().name), 10)]"
        },
        "rdshNumberOfInstances": {
            "type": "int",
            "metadata": {
                "description": "Number of session hosts that will be created and added to the hostpool."
            }
        },
        "rdshVMDiskType": {
            "type": "string",
            "allowedValues": [
                "Premium_LRS",
                "StandardSSD_LRS",
                "Standard_LRS"
            ],
            "metadata": {
                "description": "The VM disk type for the VM: Premium_LRS (Default), Standard_LRS or StandardSSD_LRS."
            },
            "defaultValue": "Premium_LRS"
        },
        "rdshVmSize": {
            "type": "string",
            "metadata": {
                "description": "The size of the session host VMs."
            },
            "defaultValue": "Standard_D4s_v3"
        },
        "enableAcceleratedNetworking": {
            "type": "bool",
            "metadata": {
                "description": "Enables Accelerated Networking feature, notice that VM size must support it, this is supported in most of general purpose and compute-optimized instances with 2 or more vCPUs, on instances that supports hyperthreading it is required minimum of 4 vCPUs."
            },
            "defaultValue": false
        },
        "rdshUseManagedDisks": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Warning: Parameter 'rdshUseManagedDisks' will not be allowed to be false, starting March 1st, 2020. True indicating you would like to use managed disks or false indicating you would like to use unmanaged disks."
            }
        },
        "domainJoinType": {
            "type": "string",
            "allowedValues": [
                "azureADJoin"
            ],
            "metadata": {
                "description": "Specify whether you want to join your VM to a Windows Server Active Directory (domainJoin) or Azure Active Directory (azureADJoin)."
            }
        },
        "localAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "A username in the domain that has privileges to join the session hosts to the domain. For example, 'user1@contoso.com'."
            }
        },
        "localAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password that corresponds to the existing domain username."
            }
        },
        "existingVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the virtual network the VMs will be connected to."
            }
        },
        "newOrExistingVnet": {
            "type": "string",
            "defaultValue": "existing",
            "allowedValues": [
                "existing"
            ],
            "metadata": {
                "description": "Only existing vnets are allowed. This parameter ensures validation for Azure Marketplace offering."
            }
        },
        "existingSubnetName": {
            "type": "string",
            "metadata": {
                "description": "The subnet the VMs will be placed in."
            }
        },
        "virtualNetworkResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The resource group containing the existing virtual network."
            }
        },
        "enablePersistentDesktop": {
            "type": "bool",
            "metadata": {
                "description": "Set this parameter to true if you would like to enable Persistent Desktop experience. Defaults to false."
            },
            "defaultValue": false
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "(Required for Azure Marketplace.) Leave as is, unless you would like to not use a location that is different from the location of the resouce group."
            }
        }
    },
    "variables": {
        "rdshPrefix": "[concat(parameters('rdshNamePrefix'), '-')]",
        "subnet-id": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubnetName'))]",
        "RDPSModSource": "attached",
        "imageName": "[concat(variables('rdshPrefix'), 'image')]",
        "VMImageReference": {
            "customimage": {
                "id": "[resourceId(parameters('rdshCustomImageSourceResourceGroup'), 'Microsoft.Compute/images', parameters('rdshCustomImageSourceName'))]"
            }
        },
        "rdshImageSourceLower": "[toLower(parameters('rdshImageSource'))]",
        "rdshManagedDisks": "[if(equals(variables('rdshImageSourceLower'), 'customvhd'), parameters('rdshUseManagedDisks'), bool('true'))]",
        "storageaccount": "[if(variables('rdshManagedDisks'), json('null'), concat(resourceId(parameters('storageAccountResourceGroupName'), 'Microsoft.Storage/storageAccounts', split(split(parameters('VmImageVhdUri'), '/')[2], '.' )[0])))]"
    },
    "functions": [
        {
            "namespace": "main",
            "members": {
                "getAvailabilitySet": {
                    "parameters": [
                        {
                            "name": "rdshPrefix",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "object",
                        "value": {
                            "id": "[resourceId('Microsoft.Compute/availabilitySets/', concat(parameters('rdshPrefix'), 'availabilitySet'))]"
                        }
                    }
                },
                "getVMImageReferenceCustomVHD": {
                    "parameters": [
                        {
                            "name": "imageName",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "object",
                        "value": {
                            "id": "[resourceId('Microsoft.Compute/images', parameters('imageName'))]"
                        }
                    }
                }
            }
        }
    ],
    "resources": [
        {
            "apiVersion": "2018-10-01",
            "condition": "[not(parameters('enablePersistentDesktop'))]",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[concat(variables('rdshPrefix'), 'availabilitySet')]",
            "location": "[parameters('location')]",
            "properties": {
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 2
            },
            "sku": {
                "name": "[if(variables('rdshManagedDisks'), 'Aligned', 'Classic')]"
            }
        },
        {
            "condition": "[and(variables('rdshManagedDisks'), equals(variables('rdshImageSourceLower'), 'customvhd'))]",
            "type": "Microsoft.Compute/images",
            "apiVersion": "2018-10-01",
            "name": "[variables('imageName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', variables('rdshPrefix'), 'availabilitySet')]"
            ],
            "properties": {
                "storageProfile": {
                    "osDisk": {
                        "osType": "Windows",
                        "osState": "Generalized",
                        "blobUri": "[parameters('VmImageVhdUri')]",
                        "storageAccountType": "[parameters('rdshVMDiskType')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2018-11-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('rdshPrefix'), copyindex(), '-nic')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', variables('rdshPrefix'), 'availabilitySet')]"
            ],
            "copy": {
                "name": "rdsh-nic-loop",
                "count": "[parameters('rdshNumberOfInstances')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]"
            }
        },
        {
            "condition": "[variables('rdshManagedDisks')]",
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(if(variables('rdshManagedDisks'), '', 'null'), variables('rdshPrefix'), copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "rdsh-vm-loop",
                "count": "[parameters('rdshNumberOfInstances')]"
            },
            "metadata": {
                "comments": "If the following conditional dependencies are not deployed, ARM will auto remove them from this dependsOn list"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/images/', variables('imageName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('rdshPrefix'), copyindex(), '-nic')]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('rdshVmSize')]"
                },
                "availabilitySet": "[if(not(parameters('enablePersistentDesktop')), main.getAvailabilitySet(variables('rdshPrefix')), json('null'))]",
                "osProfile": {
                    "computerName": "[concat(variables('rdshPrefix'), copyindex())]",
                    "adminUsername": "[parameters('localAdminUsername')]",
                    "adminPassword": "[parameters('localAdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[if(equals(variables('rdshImageSourceLower'), 'customvhd'), main.getVMImageReferenceCustomVHD(variables('imageName')), variables('VMImageReference')[variables('rdshImageSourceLower')])]",
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('rdshVMDiskType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('rdshPrefix'), copyindex(), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                },
                "licenseType": "Windows_Client"
            }
        },
        {
            "condition": "[equals(parameters('domainJoinType'), 'azureADJoin')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2018-10-01",
            "name": "[concat(variables('rdshPrefix'), copyindex(),'/joinAzureADAndMDMEnroll')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('rdshPrefix'), copyindex())]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.ActiveDirectory",
                "type": "AADLoginForWindows",
                "typeHandlerVersion": "1.0"
            },
            "copy": {
                "name": "aad-domain-join-loop",
                "count": "[parameters('rdshNumberOfInstances')]"
            }
        }
    ],
    "outputs": { }
}
